[project]
name = "onnx-export"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = "==3.12.*"
dependencies = [
    "omegaconf>=2.3.0",
    "onnx>=1.19.0",
    "onnxruntime>=1.23.0",
    "onnxscript>=0.5.3",
    "pyannote-audio>=4.0.0",
    "torch>=2.8.0",
    "torchcodec>=0.7.0",
]


# https://docs.astral.sh/ruff/configuration/
[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "FIX",
    "TD", # disable todo warnings
    "ERA",  # allow commented out code
    "ANN003", # missing kwargs
    "B006",
    "B008",
    "COM812", # trailing comma
    "D10",  # disabled required docstrings
    "D401",
    "EM102",
    "FBT001",
    "FBT002",
    "PLR0913",
    "PLR2004", # magic
    "RET504",
    "RET505",
    "RET508",
    "S101", # allow assert
    "S104",
    "S603", # subprocess untrusted input
    "SIM102",
    "T201", # print
    "TRY003",
    "TRY300",
    "TRY301",
    "W505",
    "ISC001", # recommended to disable for formatting
    "INP001",
    "PT018",
    "G004", # logging f string
    "E501", # line-too-long
    "PLC0415"
]

[tool.ruff.lint.isort]
force-sort-within-sections = true

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.basedpyright]
typeCheckingMode = "standard"
pythonVersion = "3.12"
pythonPlatform = "Linux"

[tool.pytest.ini_options]
addopts = "--benchmark-time-unit=ms -s"

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-benchmark>=5.1.0",
    "rich>=14.1.0",
]
